// client/lib/api.ts

import axios from "axios";

export const api = axios.create({
  baseURL: process.env.NEXT_PUBLIC_API_BASE || "http://localhost:8000",
});

// üì° Token –±–∞ request info log —Ö–∏–π—Ö interceptor
api.interceptors.request.use((config) => {
  let token: string | null = null;

  // ‚úÖ SSR “Ø–µ–¥ localStorage –±–∞–π—Ö–≥“Ø–π —Ç—É–ª —Ö–∞–º–≥–∞–∞–ª–∞–ª—Ç —Ö–∏–π–Ω—ç
  if (typeof window !== "undefined") {
    token =
      localStorage.getItem("mentorToken") ||
      localStorage.getItem("studentToken");
  }

  config.headers = config.headers || {};

  // ‚úÖ Token –±–∞–π–≤–∞–ª Authorization header-–¥ —Ç–æ—Ö–∏—Ä—É—É–ª–Ω–∞
  if (token) {
    config.headers.Authorization = `Bearer ${token}`;
    console.log("‚úÖ Token added to request:", token);
  } else {
    console.warn("‚ö†Ô∏è No token found in localStorage.");
  }

  // üîç Debug info
console.log(`[API] ${config.baseURL ?? ""}${config.url ?? ""}`);
  console.log("üì¶ Request method:", config.method?.toUpperCase());
  console.log("üì§ Request headers:", config.headers);
  if (config.data) console.log("üìù Request data:", config.data);

  return config;
});
