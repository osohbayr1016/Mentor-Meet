import { Request, Response } from "express";
import mongoose from "mongoose";
import { Booking, BookingStatus } from "../model/booking-model";

/**
 * @route   PATCH /bookings/:id/cancel
 * @desc    Cancel a mentor-student meeting
 * @access  Protected (optional)
 */
export const cancelMeeting = async (req: Request, res: Response) => {
  try {
    const { id } = req.params;

    console.log("üì• –£—É–ª–∑–∞–ª—Ç —Ü—É—Ü–ª–∞—Ö —Ö“Ø—Å—ç–ª—Ç –∏—Ä–ª—ç—ç");
    console.log("üÜî –¶—É—Ü–ª–∞—Ö —É—É–ª–∑–∞–ª—Ç—ã–Ω ID:", id);

    // ‚úÖ ObjectId —ç—Å—ç—Ö–∏–π–≥ —à–∞–ª–≥–∞–Ω–∞
    if (!mongoose.Types.ObjectId.isValid(id)) {
      console.log("‚ùå ObjectId –±—É—Ä—É—É –±–∞–π–Ω–∞");
      return res.status(400).json({
        success: false,
        message: "Meeting ID –±—É—Ä—É—É –±–∞–π–Ω–∞",
      });
    }

    // üîç ID-—Ä booking —Ö–∞–π–Ω–∞
    const booking = await Booking.findById(id);

    if (!booking) {
      console.log("‚ùå Booking –æ–ª–¥—Å–æ–Ω–≥“Ø–π");
      return res.status(404).json({
        success: false,
        message: "–£—É–ª–∑–∞–ª—Ç –æ–ª–¥—Å–æ–Ω–≥“Ø–π",
      });
    }

    console.log("‚úÖ Booking –æ–ª–¥–ª–æ–æ:", booking);

    // ‚õî –ê–ª—å —Ö—ç–¥–∏–π–Ω CANCELLED –±–æ–ª –¥–∞—Ö–∏–Ω —Ö–∞–¥–≥–∞–ª–∞—Ö–≥“Ø–π
    if (booking.status === BookingStatus.CANCELLED) {
      console.log("‚ö†Ô∏è –£—É–ª–∑–∞–ª—Ç –∞–ª—å —Ö—ç–¥–∏–π–Ω —Ü—É—Ü–ª–∞–≥–¥—Å–∞–Ω");
      return res.status(400).json({
        success: false,
        message: "–≠–Ω—ç —É—É–ª–∑–∞–ª—Ç –∞–ª—å —Ö—ç–¥–∏–π–Ω —Ü—É—Ü–ª–∞–≥–¥—Å–∞–Ω –±–∞–π–Ω–∞",
      });
    }

    // üì¶ –°—Ç–∞—Ç—É—Å—ã–≥ CANCELLED –±–æ–ª–≥–æ–∂ —Ö–∞–¥–≥–∞–ª–Ω–∞
    booking.status = BookingStatus.CANCELLED;
    await booking.save();

    console.log("‚úÖ –£—É–ª–∑–∞–ª—Ç —Ü—É—Ü–ª–∞–≥–¥–ª–∞–∞");

    return res.status(200).json({
      success: true,
      message: "–£—É–ª–∑–∞–ª—Ç –∞–º–∂–∏–ª—Ç—Ç–∞–π —Ü—É—Ü–ª–∞–≥–¥–ª–∞–∞",
    });
  } catch (error: any) {
    console.error("üî• cancelMeeting –∞–ª–¥–∞–∞:", error.message || error);
    return res.status(500).json({
      success: false,
      message: "–°–µ—Ä–≤–µ—Ä –¥—ç—ç—Ä –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞",
      error: error.message || error,
    });
  }
};
